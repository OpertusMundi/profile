{"externalDocs":{"description":"GitHub","url":"https://github.com/OpertusMundi/profile"},"info":{"contact":{"email":"kpsarakis94@gmail.com"},"description":"A service that profiles geospatial data using the BigDataVoyant library https://github.com/OpertusMundi/BigDataVoyant","title":"Profile API","version":"0.1.0"},"openapi":"3.0.2","paths":{"/profile/file/netcdf":{"post":{"requestBody":{"content":{"multipart/form-data":{"schema":{"properties":{"aspect_ratio":{"description":"The aspect ratio of the static map to be generated","type":"float"},"basemap_name":{"default":"Mapnik","description":"The name of the basemap","type":"string"},"basemap_provider":{"default":"OpenStreetMap","description":"The basemap provider","type":"string"},"height":{"description":"The height (in pixels) of the static map to be generated","type":"integer"},"lat":{"description":"The column name with the latitude information","type":"string"},"lon":{"description":"The column name with the longitude information","type":"string"},"resource":{"description":"The spatial file.","format":"binary","type":"string"},"response":{"default":"prompt","description":"Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.","enum":["prompt","deferred"],"type":"string"},"time":{"description":"The column name with the time information","type":"string"},"width":{"description":"The width (in pixels) of the static map to be generated","type":"integer"}},"required":["resource"],"type":"object"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"assetType":{"description":"The type of the asset (always *netCDF*).","type":"string"},"dimensionsList":{"description":"List of dimensions.","type":"object"},"dimensionsProperties":{"description":"The properties for each dimension.","type":"object"},"dimensionsSize":{"description":"Number of dimensions.","type":"integer"},"mbr":{"description":"The Well-Known-Text representation of the Minimum Bounding Rectangle (MBR).","type":"string"},"metadata":{"description":"File's metadata","type":"object"},"noDataValues":{"description":"The no-data value for each the variables.","type":"object"},"statistics":{"description":"General statistics for each of the variables (*missing*, *min*, *max*, *mean*, *std*, *variance* and whether the data are *contiguous*).","type":"object"},"temporalExtent":{"description":"A string representing the temporal extend of the dataset.","type":"string"},"variablesList":{"description":"List of variables.","type":"object"},"variablesProperties":{"description":"The properties for each variable.","type":"object"},"variablesSize":{"description":"Number of variables.","type":"integer"}},"type":"object"}}},"description":"Profiling completed and returned."},"202":{"content":{"application/json":{"schema":{"properties":{"endpoint":{"description":"The *resource* endpoint to get the resulting resource when ready.","type":"string"},"status":{"description":"The *status* endpoint to poll for the status of the request.","type":"string"},"ticket":{"description":"The ticket corresponding to the request.","type":"string"}},"type":"object"}}},"description":"Accepted for processing, but profile has not been completed.","links":{"GetStatus":{"description":"The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.","operationId":"getStatus","parameters":{"ticket":"$response.body#/ticket"}}}},"400":{"description":"Client error."}},"summary":"Profile a NetCDF file that is provided with the request","tags":["Profile"]}},"/profile/file/raster":{"post":{"requestBody":{"content":{"multipart/form-data":{"schema":{"properties":{"resource":{"description":"The spatial file.","format":"binary","type":"string"},"response":{"default":"prompt","description":"Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.","enum":["prompt","deferred"],"type":"string"}},"required":["resource"],"type":"object"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"assetType":{"description":"The type of the asset (always *raster*).","type":"string"},"cog":{"description":"If raster is GeoTiff, whether it is Cloud-Optimized or not.","type":"boolean"},"colorInterpretation":{"description":"The Color Interpretation for each band.","type":"object"},"crs":{"description":"The short name of the dataset's native Coordinate Reference System (CRS).","type":"string"},"datatypes":{"description":"The data type for each band.","type":"object"},"histogram":{"description":"The default histogram of the raster file for each band.","type":"object"},"info":{"description":"A JSON with general information about the raster file (such as metadata, image structure, etc.).","type":"object"},"mbr":{"description":"The Well-Known-Text representation of the Minimum Bounding Rectangle (MBR).","type":"string"},"noDataValue":{"description":"The no-data value for each band.","type":"object"},"numberOfBands":{"description":"The number of bands in the raster.","type":"integer"},"resolution":{"description":"The resolution for each dimension, and the unit of measurement.","type":"object"},"statistics":{"description":"A list with the statistics for each band of the raster file.","type":"object"}},"type":"object"}}},"description":"Profiling completed and returned."},"202":{"content":{"application/json":{"schema":{"properties":{"endpoint":{"description":"The *resource* endpoint to get the resulting resource when ready.","type":"string"},"status":{"description":"The *status* endpoint to poll for the status of the request.","type":"string"},"ticket":{"description":"The ticket corresponding to the request.","type":"string"}},"type":"object"}}},"description":"Accepted for processing, but profile has not been completed.","links":{"GetStatus":{"description":"The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.","operationId":"getStatus","parameters":{"ticket":"$response.body#/ticket"}}}},"400":{"description":"Client error."}},"summary":"Profile a raster file that is provided with the request","tags":["Profile"]}},"/profile/file/vector":{"post":{"requestBody":{"content":{"multipart/form-data":{"schema":{"properties":{"aspect_ratio":{"description":"The aspect ratio of the static map to be generated","type":"float"},"basemap_name":{"default":"Mapnik","description":"The name of the basemap","type":"string"},"basemap_provider":{"default":"OpenStreetMap","description":"The basemap provider","type":"string"},"height":{"description":"The height (in pixels) of the static map to be generated","type":"integer"},"resource":{"description":"The spatial file.","format":"binary","type":"string"},"response":{"default":"prompt","description":"Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.","enum":["prompt","deferred"],"type":"string"},"width":{"description":"The width (in pixels) of the static map to be generated","type":"integer"}},"required":["resource"],"type":"object"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"assetType":{"description":"One of *tabular* or *vector*.","type":"string"},"attributes":{"description":"A list with the attributes of the dataset.","type":"object"},"clusters":{"description":"A GeoJSON with clustered geometries.","type":"object"},"clustersStatic":{"description":"A PNG static map with the clustered geometries, base64 encoded.","type":"string"},"convexHull":{"description":"The Well-Known-Text representation of the Convex Hull for all geometries.","type":"string"},"convexHullStatic":{"description":"A PNG static map showing the convex hull, base64 encoded.","type":"string"},"count":{"description":"Count not null values for each attribute in the dataset.","type":"object"},"crs":{"description":"The short name of the dataset's native Coordinate Reference System (CRS).","type":"string"},"datatypes":{"description":"The datatypes for each of the dataset's attributes.","type":"object"},"distinct":{"description":"The distinct values for each of the attributes in the dataset.","type":"object"},"distribution":{"description":"The distribution of the values for each attribute in the dataset.","type":"object"},"featureCount":{"description":"The number of features in the dataset.","type":"integer"},"heatmap":{"description":"A GeoJSON with a heatmap of the geometries.","type":"object"},"heatmapStatic":{"description":"A PNG static heatmap, base64 encoded.","type":"string"},"mbr":{"description":"The Well-Known-Text representation of the Minimum Bounding Rectangle (MBR).","type":"string"},"mbrStatic":{"description":"A PNG static map with the MBR, base64 encoded.","type":"string"},"quantiles":{"description":"The 5, 25, 50, 75, 95 quantiles for each of the numeric attributes in the dataset.","type":"object"},"recurring":{"description":"The most frequent values for each of the attributes in the dataset.","type":"object"},"statistics":{"description":"Statistics (*min*, *max*, *mean*, *median*, *std*, *sum*) for the numerical attributes in the dataset.","type":"object"},"thumbnail":{"description":"A PNG thumbnail of the dataset, base64 encoded.","type":"string"}},"type":"object"}}},"description":"Profiling completed and returned."},"202":{"content":{"application/json":{"schema":{"properties":{"endpoint":{"description":"The *resource* endpoint to get the resulting resource when ready.","type":"string"},"status":{"description":"The *status* endpoint to poll for the status of the request.","type":"string"},"ticket":{"description":"The ticket corresponding to the request.","type":"string"}},"type":"object"}}},"description":"Accepted for processing, but profile has not been completed.","links":{"GetStatus":{"description":"The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.","operationId":"getStatus","parameters":{"ticket":"$response.body#/ticket"}}}},"400":{"description":"Client error."}},"summary":"Profile a vector file that is provided with the request","tags":["Profile"]}},"/profile/path/netcdf":{"post":{"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"properties":{"aspect_ratio":{"description":"The aspect ratio of the static map to be generated","type":"float"},"basemap_name":{"default":"Mapnik","description":"The name of the basemap","type":"string"},"basemap_provider":{"default":"OpenStreetMap","description":"The basemap provider","type":"string"},"height":{"description":"The height (in pixels) of the static map to be generated","type":"integer"},"lat":{"description":"The column name with the latitude information","type":"string"},"lon":{"description":"The column name with the longitude information","type":"string"},"resource":{"description":"The spatial file.","format":"binary","type":"string"},"response":{"default":"prompt","description":"Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.","enum":["prompt","deferred"],"type":"string"},"time":{"description":"The column name with the time information","type":"string"},"width":{"description":"The width (in pixels) of the static map to be generated","type":"integer"}},"required":["resource"],"type":"object"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"assetType":{"description":"The type of the asset (always *netCDF*).","type":"string"},"dimensionsList":{"description":"List of dimensions.","type":"object"},"dimensionsProperties":{"description":"The properties for each dimension.","type":"object"},"dimensionsSize":{"description":"Number of dimensions.","type":"integer"},"mbr":{"description":"The Well-Known-Text representation of the Minimum Bounding Rectangle (MBR).","type":"string"},"metadata":{"description":"File's metadata","type":"object"},"noDataValues":{"description":"The no-data value for each the variables.","type":"object"},"statistics":{"description":"General statistics for each of the variables (*missing*, *min*, *max*, *mean*, *std*, *variance* and whether the data are *contiguous*).","type":"object"},"temporalExtent":{"description":"A string representing the temporal extend of the dataset.","type":"string"},"variablesList":{"description":"List of variables.","type":"object"},"variablesProperties":{"description":"The properties for each variable.","type":"object"},"variablesSize":{"description":"Number of variables.","type":"integer"}},"type":"object"}}},"description":"Profiling completed and returned."},"202":{"content":{"application/json":{"schema":{"properties":{"endpoint":{"description":"The *resource* endpoint to get the resulting resource when ready.","type":"string"},"status":{"description":"The *status* endpoint to poll for the status of the request.","type":"string"},"ticket":{"description":"The ticket corresponding to the request.","type":"string"}},"type":"object"}}},"description":"Accepted for processing, but profile has not been completed.","links":{"GetStatus":{"description":"The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.","operationId":"getStatus","parameters":{"ticket":"$response.body#/ticket"}}}},"400":{"description":"Client error."}},"summary":"Profile a NetCDF file that is provided with the request","tags":["Profile"]}},"/profile/path/raster":{"post":{"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"properties":{"resource":{"description":"The spatial file.","format":"binary","type":"string"},"response":{"default":"prompt","description":"Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.","enum":["prompt","deferred"],"type":"string"}},"required":["resource"],"type":"object"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"assetType":{"description":"The type of the asset (always *raster*).","type":"string"},"cog":{"description":"If raster is GeoTiff, whether it is Cloud-Optimized or not.","type":"boolean"},"colorInterpretation":{"description":"The Color Interpretation for each band.","type":"object"},"crs":{"description":"The short name of the dataset's native Coordinate Reference System (CRS).","type":"string"},"datatypes":{"description":"The data type for each band.","type":"object"},"histogram":{"description":"The default histogram of the raster file for each band.","type":"object"},"info":{"description":"A JSON with general information about the raster file (such as metadata, image structure, etc.).","type":"object"},"mbr":{"description":"The Well-Known-Text representation of the Minimum Bounding Rectangle (MBR).","type":"string"},"noDataValue":{"description":"The no-data value for each band.","type":"object"},"numberOfBands":{"description":"The number of bands in the raster.","type":"integer"},"resolution":{"description":"The resolution for each dimension, and the unit of measurement.","type":"object"},"statistics":{"description":"A list with the statistics for each band of the raster file.","type":"object"}},"type":"object"}}},"description":"Profiling completed and returned."},"202":{"content":{"application/json":{"schema":{"properties":{"endpoint":{"description":"The *resource* endpoint to get the resulting resource when ready.","type":"string"},"status":{"description":"The *status* endpoint to poll for the status of the request.","type":"string"},"ticket":{"description":"The ticket corresponding to the request.","type":"string"}},"type":"object"}}},"description":"Accepted for processing, but profile has not been completed.","links":{"GetStatus":{"description":"The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.","operationId":"getStatus","parameters":{"ticket":"$response.body#/ticket"}}}},"400":{"description":"Client error."}},"summary":"Profile a raster file that is provided with the request","tags":["Profile"]}},"/profile/path/vector":{"post":{"requestBody":{"content":{"application/x-www-form-urlencoded":{"schema":{"properties":{"aspect_ratio":{"description":"The aspect ratio of the static map to be generated","type":"float"},"basemap_name":{"default":"Mapnik","description":"The name of the basemap","type":"string"},"basemap_provider":{"default":"OpenStreetMap","description":"The basemap provider","type":"string"},"height":{"description":"The height (in pixels) of the static map to be generated","type":"integer"},"resource":{"description":"The spatial file.","format":"binary","type":"string"},"response":{"default":"prompt","description":"Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.","enum":["prompt","deferred"],"type":"string"},"width":{"description":"The width (in pixels) of the static map to be generated","type":"integer"}},"required":["resource"],"type":"object"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"assetType":{"description":"One of *tabular* or *vector*.","type":"string"},"attributes":{"description":"A list with the attributes of the dataset.","type":"object"},"clusters":{"description":"A GeoJSON with clustered geometries.","type":"object"},"clustersStatic":{"description":"A PNG static map with the clustered geometries, base64 encoded.","type":"string"},"convexHull":{"description":"The Well-Known-Text representation of the Convex Hull for all geometries.","type":"string"},"convexHullStatic":{"description":"A PNG static map showing the convex hull, base64 encoded.","type":"string"},"count":{"description":"Count not null values for each attribute in the dataset.","type":"object"},"crs":{"description":"The short name of the dataset's native Coordinate Reference System (CRS).","type":"string"},"datatypes":{"description":"The datatypes for each of the dataset's attributes.","type":"object"},"distinct":{"description":"The distinct values for each of the attributes in the dataset.","type":"object"},"distribution":{"description":"The distribution of the values for each attribute in the dataset.","type":"object"},"featureCount":{"description":"The number of features in the dataset.","type":"integer"},"heatmap":{"description":"A GeoJSON with a heatmap of the geometries.","type":"object"},"heatmapStatic":{"description":"A PNG static heatmap, base64 encoded.","type":"string"},"mbr":{"description":"The Well-Known-Text representation of the Minimum Bounding Rectangle (MBR).","type":"string"},"mbrStatic":{"description":"A PNG static map with the MBR, base64 encoded.","type":"string"},"quantiles":{"description":"The 5, 25, 50, 75, 95 quantiles for each of the numeric attributes in the dataset.","type":"object"},"recurring":{"description":"The most frequent values for each of the attributes in the dataset.","type":"object"},"statistics":{"description":"Statistics (*min*, *max*, *mean*, *median*, *std*, *sum*) for the numerical attributes in the dataset.","type":"object"},"thumbnail":{"description":"A PNG thumbnail of the dataset, base64 encoded.","type":"string"}},"type":"object"}}},"description":"Profiling completed and returned."},"202":{"content":{"application/json":{"schema":{"properties":{"endpoint":{"description":"The *resource* endpoint to get the resulting resource when ready.","type":"string"},"status":{"description":"The *status* endpoint to poll for the status of the request.","type":"string"},"ticket":{"description":"The ticket corresponding to the request.","type":"string"}},"type":"object"}}},"description":"Accepted for processing, but profile has not been completed.","links":{"GetStatus":{"description":"The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.","operationId":"getStatus","parameters":{"ticket":"$response.body#/ticket"}}}},"400":{"description":"Client error."}},"summary":"Profile a vector file that is provided with the request","tags":["Profile"]}},"/resource/{ticket}":{"get":{"description":"Returns the resource resulted from a profile request corresponding to a specific ticket.","parameters":[{"description":"The ticket of the request","in":"path","name":"ticket","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/x-tar":{"schema":{"format":"binary","type":"string"}}},"description":"The profiled compressed spatial file."},"404":{"description":"Ticket not found or profile has not been completed."},"507":{"description":"Resource does not exist."}},"summary":"Get the resource associated to a profile request.","tags":["Resource"]}},"/status/{ticket}":{"get":{"description":"Returns the status of a request corresponding to a specific ticket.","operationId":"getStatus","parameters":[{"description":"The ticket of the request","in":"path","name":"ticket","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"comment":{"description":"If profiling has failed, a short comment describing the reason.","type":"string"},"completed":{"description":"Whether profiling process has been completed or not.","type":"boolean"},"execution_time(s)":{"description":"The execution time in seconds.","type":"integer"},"requested":{"description":"The timestamp of the request.","format":"datetime","type":"string"},"success":{"description":"Whether profiling process completed successfully.","type":"boolean"}},"type":"object"}}},"description":"Ticket found and status returned."},"404":{"description":"Ticket not found."}},"summary":"Get the status of a profile request.","tags":["Status"]}}}}
