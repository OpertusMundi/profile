{
    "externalDocs": {
        "description": "GitHub",
        "url": "https://github.com/OpertusMundi/profile"
    },
    "info": {
        "contact": {
            "email": "kpsarakis94@gmail.com"
        },
        "description": "A service that profiles geospatial data using the BigDataVoyant library https://github.com/OpertusMundi/BigDataVoyant",
        "title": "Profile API",
        "version": "1.0.0"
    },
    "openapi": "3.0.2",
    "paths": {
        "/normalize/file": {
            "post": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "alphabetical_normalization": {
                                        "description": "The names of the columns to perform alphabetical normalization",
                                        "type": "list"
                                    },
                                    "case_normalization": {
                                        "description": "The names of the columns to perform case normalization",
                                        "type": "list"
                                    },
                                    "column_name_normalization": {
                                        "description": "Whether to perform column name normalization or not",
                                        "type": "boolean"
                                    },
                                    "crs": {
                                        "description": "The dataset's crs",
                                        "type": "string"
                                    },
                                    "csv_delimiter": {
                                        "default": "The program will try to detect it automatically",
                                        "description": "The csv file's delimiter if applicable",
                                        "type": "string"
                                    },
                                    "date_normalization": {
                                        "description": "The names of the columns to perform date normalization",
                                        "type": "list"
                                    },
                                    "phone_normalization": {
                                        "description": "The names of the columns to perform phone normalization",
                                        "type": "list"
                                    },
                                    "resource": {
                                        "description": "The spatial file.",
                                        "format": "binary",
                                        "type": "string"
                                    },
                                    "resource_type": {
                                        "description": "The file type of the resource",
                                        "enum": [
                                            "csv",
                                            "shp"
                                        ],
                                        "type": "string"
                                    },
                                    "response": {
                                        "default": "prompt",
                                        "description": "Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.",
                                        "enum": [
                                            "prompt",
                                            "deferred"
                                        ],
                                        "type": "string"
                                    },
                                    "special_character_normalization": {
                                        "description": "The names of the columns to perform special character normalization",
                                        "type": "list"
                                    },
                                    "transliteration": {
                                        "description": "The names of the columns to perform transliteration",
                                        "type": "list"
                                    },
                                    "transliteration_lang": {
                                        "description": "The language contained in the column we want to transliterate",
                                        "type": "string"
                                    },
                                    "transliteration_langs": {
                                        "description": "The languages contained in the column we want to transliterate",
                                        "type": "list"
                                    },
                                    "value_cleaning": {
                                        "description": "The names of the columns to perform value cleaning",
                                        "type": "list"
                                    },
                                    "wkt_normalization": {
                                        "description": "Whether to perform wkt normalization or not",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "resource",
                                    "resource_type"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "oneOf": [
                                {
                                    "application/csv": {
                                        "schema": {
                                            "type": "object"
                                        }
                                    }
                                },
                                {
                                    "application/zip": {
                                        "schema": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        },
                        "description": "The input file with all the specified normalizations applied."
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "endpoint": {
                                            "description": "The *resource* endpoint to get the resulting resource when ready.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "The *status* endpoint to poll for the status of the request.",
                                            "type": "string"
                                        },
                                        "ticket": {
                                            "description": "The ticket corresponding to the request.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Accepted for processing, but normalization has not been completed.",
                        "links": {
                            "GetStatus": {
                                "description": "The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.",
                                "operationId": "getStatus",
                                "parameters": {
                                    "ticket": "$response.body#/ticket"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client error."
                    }
                },
                "summary": "Normalize a vector file that is provided with the request",
                "tags": [
                    "Normalize"
                ]
            }
        },
        "/normalize/path": {
            "post": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "alphabetical_normalization": {
                                        "description": "The names of the columns to perform alphabetical normalization",
                                        "type": "list"
                                    },
                                    "case_normalization": {
                                        "description": "The names of the columns to perform case normalization",
                                        "type": "list"
                                    },
                                    "column_name_normalization": {
                                        "description": "Whether to perform column name normalization or not",
                                        "type": "boolean"
                                    },
                                    "crs": {
                                        "description": "The dataset's crs",
                                        "type": "string"
                                    },
                                    "csv_delimiter": {
                                        "default": "The program will try to detect it automatically",
                                        "description": "The csv file's delimiter if applicable",
                                        "type": "string"
                                    },
                                    "date_normalization": {
                                        "description": "The names of the columns to perform date normalization",
                                        "type": "list"
                                    },
                                    "phone_normalization": {
                                        "description": "The names of the columns to perform phone normalization",
                                        "type": "list"
                                    },
                                    "resource": {
                                        "description": "The spatial file's path.",
                                        "format": "binary",
                                        "type": "string"
                                    },
                                    "resource_type": {
                                        "description": "The file type of the resource",
                                        "enum": [
                                            "csv",
                                            "shp"
                                        ],
                                        "type": "string"
                                    },
                                    "response": {
                                        "default": "prompt",
                                        "description": "Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.",
                                        "enum": [
                                            "prompt",
                                            "deferred"
                                        ],
                                        "type": "string"
                                    },
                                    "special_character_normalization": {
                                        "description": "The names of the columns to perform special character normalization",
                                        "type": "list"
                                    },
                                    "transliteration": {
                                        "description": "The names of the columns to perform transliteration",
                                        "type": "list"
                                    },
                                    "transliteration_lang": {
                                        "description": "The language contained in the column we want to transliterate",
                                        "type": "string"
                                    },
                                    "transliteration_langs": {
                                        "description": "The languages contained in the column we want to transliterate",
                                        "type": "list"
                                    },
                                    "value_cleaning": {
                                        "description": "The names of the columns to perform value cleaning",
                                        "type": "list"
                                    },
                                    "wkt_normalization": {
                                        "description": "Whether to perform wkt normalization or not",
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "resource",
                                    "resource_type"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "oneOf": [
                                {
                                    "application/csv": {
                                        "schema": {
                                            "type": "object"
                                        }
                                    }
                                },
                                {
                                    "application/zip": {
                                        "schema": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        },
                        "description": "The input file with all the specified normalizations applied."
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "endpoint": {
                                            "description": "The *resource* endpoint to get the resulting resource when ready.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "The *status* endpoint to poll for the status of the request.",
                                            "type": "string"
                                        },
                                        "ticket": {
                                            "description": "The ticket corresponding to the request.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Accepted for processing, but normalization has not been completed.",
                        "links": {
                            "GetStatus": {
                                "description": "The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.",
                                "operationId": "getStatus",
                                "parameters": {
                                    "ticket": "$response.body#/ticket"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client error."
                    }
                },
                "summary": "Normalize a vector file that its path is provided with the request",
                "tags": [
                    "Normalize"
                ]
            }
        },
        "/profile/file/netcdf": {
            "post": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "aspect_ratio": {
                                        "description": "The aspect ratio of the static map to be generated",
                                        "type": "float"
                                    },
                                    "basemap_name": {
                                        "default": "Mapnik",
                                        "description": "The name of the basemap",
                                        "type": "string"
                                    },
                                    "basemap_provider": {
                                        "default": "OpenStreetMap",
                                        "description": "The basemap provider",
                                        "type": "string"
                                    },
                                    "crs": {
                                        "description": "The dataset's crs",
                                        "type": "string"
                                    },
                                    "height": {
                                        "description": "The height (in pixels) of the static map to be generated",
                                        "type": "integer"
                                    },
                                    "lat": {
                                        "description": "The column name with the latitude information",
                                        "type": "string"
                                    },
                                    "lon": {
                                        "description": "The column name with the longitude information",
                                        "type": "string"
                                    },
                                    "resource": {
                                        "description": "The spatial file.",
                                        "format": "binary",
                                        "type": "string"
                                    },
                                    "response": {
                                        "default": "prompt",
                                        "description": "Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.",
                                        "enum": [
                                            "prompt",
                                            "deferred"
                                        ],
                                        "type": "string"
                                    },
                                    "time": {
                                        "description": "The column name with the time information",
                                        "type": "string"
                                    },
                                    "width": {
                                        "description": "The width (in pixels) of the static map to be generated",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "resource"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "assetType": {
                                            "description": "The type of the asset (always *NetCDF*).",
                                            "example": "NetCDF",
                                            "type": "string"
                                        },
                                        "dimensionsList": {
                                            "description": "A list with the dimensions.",
                                            "example": [
                                                "lon",
                                                "lat",
                                                "level",
                                                "time"
                                            ],
                                            "items": {
                                                "description": "The dimension name.",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "dimensionsProperties": {
                                            "additionalProperties": {
                                                "description": "The properties of the specific dimension. **Note**: below are only the common properties; other custom properties may also be present.",
                                                "properties": {
                                                    "long_name": {
                                                        "description": "The long name of the dimension.",
                                                        "example": "longitude",
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "description": "The size of the dimension variable.",
                                                        "example": 128,
                                                        "type": "integer"
                                                    },
                                                    "type": {
                                                        "description": "The datatype of the dimension.",
                                                        "example": "float64",
                                                        "type": "string"
                                                    },
                                                    "units": {
                                                        "description": "A description of the dimension's units.",
                                                        "example": "degrees_east",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "description": "The properties of each dimension. The key is the dimension.",
                                            "type": "object"
                                        },
                                        "dimensionsSize": {
                                            "description": "The number of the dimensions.",
                                            "example": 4,
                                            "type": "integer"
                                        },
                                        "mbr": {
                                            "description": "The Well-Known-Text representation of the Minimum Bounding Rectangle (MBR).",
                                            "example": "POLYGON ((6.5206 49.4439, 6.5206 50.1845, 5.73398 50.1845, 5.73398 49.4439, 6.5206 49.4439))",
                                            "type": "string"
                                        },
                                        "mbrStatic": {
                                            "description": "A PNG static map with the MBR, base64 encoded.",
                                            "type": "string"
                                        },
                                        "metadata": {
                                            "additionalProperties": {
                                                "type": "string"
                                            },
                                            "description": "The metadata object as written in the file. The key is a free field for the data provider, usually describing the given information.",
                                            "type": "object"
                                        },
                                        "noDataValues": {
                                            "additionalProperties": {
                                                "description": "The no-data value for the specific variable.",
                                                "type": "numeric"
                                            },
                                            "description": "The no-data value for each the variables. The key is the variable.",
                                            "type": "object"
                                        },
                                        "statistics": {
                                            "additionalProperties": {
                                                "description": "Descriptive statistics for the specific variable.",
                                                "properties": {
                                                    "contiguous": {
                                                        "description": "Whether the data are contiguous or not.",
                                                        "type": "boolean"
                                                    },
                                                    "count": {
                                                        "description": "The number of values for the specific variable.",
                                                        "example": 220,
                                                        "type": "integer"
                                                    },
                                                    "max": {
                                                        "description": "The maximum value of the specific variable.",
                                                        "example": 20.6,
                                                        "type": "numeric"
                                                    },
                                                    "mean": {
                                                        "description": "The mean value of the specific variable.",
                                                        "example": 10.7,
                                                        "type": "numeric"
                                                    },
                                                    "min": {
                                                        "description": "The minimum value of the specific variable.",
                                                        "example": 0.4,
                                                        "type": "numeric"
                                                    },
                                                    "missing": {
                                                        "description": "The number of missing values for the specific variable.",
                                                        "example": 0,
                                                        "type": "integer"
                                                    },
                                                    "std": {
                                                        "description": "The standard deviation for the specific variable.",
                                                        "example": 2.4,
                                                        "type": "numeric"
                                                    },
                                                    "variance": {
                                                        "description": "The variance of the specific variable.",
                                                        "example": 7.9,
                                                        "type": "numeric"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "description": "Descriptive statistics for each of the variables. The key is the variable.",
                                            "type": "object"
                                        },
                                        "temporalExtent": {
                                            "description": "A free-text string representing the temporal extend of the dataset.",
                                            "example": "0.000000 - 720.000000 hours",
                                            "type": "string"
                                        },
                                        "variablesList": {
                                            "description": "A list with the variables.",
                                            "example": [
                                                "temperature",
                                                "pm1.0",
                                                "pm2.5",
                                                "pm10"
                                            ],
                                            "items": {
                                                "description": "The name of the variable.",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "variablesProperties": {
                                            "additionalProperties": {
                                                "description": "The properties of the specific variable. **Note**: below are only the common properties; other custom properties may also be present.",
                                                "properties": {
                                                    "dimensions": {
                                                        "description": "A list of the dimensions that this variable depends on.",
                                                        "example": [
                                                            "lat",
                                                            "lon"
                                                        ],
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "size": {
                                                        "description": "The size of the variable.",
                                                        "example": 128,
                                                        "type": "integer"
                                                    },
                                                    "type": {
                                                        "description": "The datatype of the variable.",
                                                        "example": "float64",
                                                        "type": "string"
                                                    },
                                                    "units": {
                                                        "description": "A description of the variable's units.",
                                                        "example": "degrees_east",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "description": "The properties for each variable. The key is the variable.",
                                            "type": "object"
                                        },
                                        "variablesSize": {
                                            "description": "Number of variables.",
                                            "example": 12,
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Profiling completed and returned."
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "endpoint": {
                                            "description": "The *resource* endpoint to get the resulting resource when ready.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "The *status* endpoint to poll for the status of the request.",
                                            "type": "string"
                                        },
                                        "ticket": {
                                            "description": "The ticket corresponding to the request.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Accepted for processing, but profile has not been completed.",
                        "links": {
                            "GetStatus": {
                                "description": "The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.",
                                "operationId": "getStatus",
                                "parameters": {
                                    "ticket": "$response.body#/ticket"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client error."
                    }
                },
                "summary": "Profile a NetCDF file that is provided with the request",
                "tags": [
                    "Profile"
                ]
            }
        },
        "/profile/file/raster": {
            "post": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "resource": {
                                        "description": "The spatial file.",
                                        "format": "binary",
                                        "type": "string"
                                    },
                                    "response": {
                                        "default": "prompt",
                                        "description": "Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.",
                                        "enum": [
                                            "prompt",
                                            "deferred"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "resource"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "assetType": {
                                            "description": "The type of the asset (always *raster*).",
                                            "example": "raster",
                                            "type": "string"
                                        },
                                        "cog": {
                                            "description": "In case the raster is GeoTiff, whether it is Cloud-Optimized or not.",
                                            "type": "boolean"
                                        },
                                        "colorInterpretation": {
                                            "description": "The Color Interpretation for each band.",
                                            "items": {
                                                "description": "The color interpretation for the n-th band.",
                                                "example": "RED",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "crs": {
                                            "description": "The short name of the dataset's native Coordinate Reference System (CRS).",
                                            "example": "EPSG:4326",
                                            "type": "string"
                                        },
                                        "datatypes": {
                                            "description": "The data type of each band.",
                                            "items": {
                                                "description": "The data type of the n-th band.",
                                                "example": "Byte",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "histogram": {
                                            "description": "The default histogram of the raster for each band.",
                                            "example": [
                                                -0.5,
                                                255.5,
                                                256,
                                                [
                                                    2513898,
                                                    31982,
                                                    11152,
                                                    26086,
                                                    12858
                                                ]
                                            ],
                                            "items": {
                                                "description": "The default histogram of the n-th band. It contains the minimum and the maximum Pixel Value, the total number of pixel values, and an array with the frequencies for each Pixel Value.",
                                                "items": {
                                                    "anyOf": [
                                                        {
                                                            "description": "The minimum Pixel Value.",
                                                            "type": "numeric"
                                                        },
                                                        {
                                                            "description": "The maximum Pixel Value.",
                                                            "type": "numeric"
                                                        },
                                                        {
                                                            "description": "The total number of pixel values.",
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "description": "An array with the frequencies for each Pixel Value (has lentgh equal to the total number of Pixel Values).",
                                                            "type": "array"
                                                        }
                                                    ]
                                                },
                                                "type": "array"
                                            },
                                            "type": "array"
                                        },
                                        "info": {
                                            "description": "General information about the raster file.",
                                            "properties": {
                                                "bands": {
                                                    "description": "A list with the bands included in the raster.",
                                                    "example": [
                                                        "RED"
                                                    ],
                                                    "items": {
                                                        "description": "The name of the band.",
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "driver": {
                                                    "description": "The driver used to open the raster.",
                                                    "example": "GeoTIFF",
                                                    "type": "string"
                                                },
                                                "files": {
                                                    "description": "A list of the files associated with the raster.",
                                                    "example": [
                                                        "example.tif"
                                                    ],
                                                    "items": {
                                                        "description": "Filename.",
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "height": {
                                                    "description": "The height in pixels.",
                                                    "example": 1080,
                                                    "type": "integer"
                                                },
                                                "imageStructure": {
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    },
                                                    "description": "Various values describing the image structure. The keys depend on the raster.",
                                                    "example": {
                                                        "COMPRESSION": "YCbCr JPEG",
                                                        "INTERLEAVE": "PIXEL",
                                                        "SOURCE_COLOR_SPACE": "YCbCr"
                                                    },
                                                    "type": "object"
                                                },
                                                "metadata": {
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    },
                                                    "description": "Metadata of the the raster as written in the file. The keys are free-text.",
                                                    "example": {
                                                        "AREA_OR_POINT": "Point",
                                                        "TIFFTAG_MAXSAMPLEVALUE": 254
                                                    },
                                                    "type": "object"
                                                },
                                                "width": {
                                                    "description": "The width in pixels.",
                                                    "example": 1920,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "mbr": {
                                            "description": "The Well-Known-Text representation of the Minimum Bounding Rectangle (MBR).",
                                            "example": "POLYGON ((6.5206 49.4439, 6.5206 50.1845, 5.73398 50.1845, 5.73398 49.4439, 6.5206 49.4439))",
                                            "type": "string"
                                        },
                                        "mbrStatic": {
                                            "description": "A PNG static map with the MBR, base64 encoded.",
                                            "type": "string"
                                        },
                                        "noDataValue": {
                                            "description": "The no-data value of each band.",
                                            "items": {
                                                "description": "The no-data value of the n-th band.",
                                                "example": null,
                                                "type": "numeric"
                                            },
                                            "type": "array"
                                        },
                                        "numberOfBands": {
                                            "description": "The number of bands in the raster.",
                                            "example": 1,
                                            "type": "integer"
                                        },
                                        "resolution": {
                                            "description": "The resolution for each axis, and the unit of measurement.",
                                            "properties": {
                                                "unit": {
                                                    "description": "The unit of resolution.",
                                                    "example": "metre",
                                                    "type": "string"
                                                },
                                                "x": {
                                                    "description": "Resolution in x-axis.",
                                                    "example": 0.16726222,
                                                    "type": "numeric"
                                                },
                                                "y": {
                                                    "description": "Resolution in y-axis.",
                                                    "example": 0.16726222,
                                                    "type": "numeric"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "statistics": {
                                            "description": "A list with descriptive statistics for each band of the raster file.",
                                            "items": {
                                                "description": "Descriptive statistics for the n-th band.",
                                                "properties": {
                                                    "max": {
                                                        "description": "The maximum value in the band.",
                                                        "example": 255.0,
                                                        "type": "numeric"
                                                    },
                                                    "mean": {
                                                        "description": "The mean value in the band.",
                                                        "example": 180.5475,
                                                        "type": "numeric"
                                                    },
                                                    "min": {
                                                        "description": "The minimun value in the band.",
                                                        "example": 0.0,
                                                        "type": "numeric"
                                                    },
                                                    "std": {
                                                        "description": "The standard deviation in the band.",
                                                        "example": 46.4463,
                                                        "type": "numeric"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Profiling completed and returned."
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "endpoint": {
                                            "description": "The *resource* endpoint to get the resulting resource when ready.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "The *status* endpoint to poll for the status of the request.",
                                            "type": "string"
                                        },
                                        "ticket": {
                                            "description": "The ticket corresponding to the request.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Accepted for processing, but profile has not been completed.",
                        "links": {
                            "GetStatus": {
                                "description": "The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.",
                                "operationId": "getStatus",
                                "parameters": {
                                    "ticket": "$response.body#/ticket"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client error."
                    }
                },
                "summary": "Profile a raster file that is provided with the request",
                "tags": [
                    "Profile"
                ]
            }
        },
        "/profile/file/vector": {
            "post": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "aspect_ratio": {
                                        "description": "The aspect ratio of the static map to be generated",
                                        "type": "float"
                                    },
                                    "basemap_name": {
                                        "default": "Mapnik",
                                        "description": "The name of the basemap",
                                        "type": "string"
                                    },
                                    "basemap_provider": {
                                        "default": "OpenStreetMap",
                                        "description": "The basemap provider",
                                        "type": "string"
                                    },
                                    "crs": {
                                        "description": "The dataset's crs",
                                        "type": "string"
                                    },
                                    "encoding": {
                                        "default": "utf-8",
                                        "description": "File encoding",
                                        "type": "string"
                                    },
                                    "geometry": {
                                        "description": "The column name with the geometry information",
                                        "type": "string"
                                    },
                                    "height": {
                                        "description": "The height (in pixels) of the static map to be generated",
                                        "type": "integer"
                                    },
                                    "lat": {
                                        "description": "The column name with the latitude information",
                                        "type": "string"
                                    },
                                    "lon": {
                                        "description": "The column name with the longitude information",
                                        "type": "string"
                                    },
                                    "resource": {
                                        "description": "The spatial file.",
                                        "format": "binary",
                                        "type": "string"
                                    },
                                    "response": {
                                        "default": "prompt",
                                        "description": "Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.",
                                        "enum": [
                                            "prompt",
                                            "deferred"
                                        ],
                                        "type": "string"
                                    },
                                    "width": {
                                        "description": "The width (in pixels) of the static map to be generated",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "resource"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "assetType": {
                                            "description": "One of *tabular* or *vector*.",
                                            "example": "vector",
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "description": "A list with all attributes of the dataset.",
                                            "example": [
                                                "attributeName1",
                                                "attributeName2",
                                                "attributeName3"
                                            ],
                                            "items": {
                                                "description": "The attribute name.",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "clusters": {
                                            "description": "A GeoJSON containing the clustered geometries.",
                                            "properties": {
                                                "features": {
                                                    "description": "Each feature represents one cluster.",
                                                    "items": {
                                                        "properties": {
                                                            "geometry": {
                                                                "description": "The geometry of the cluster.",
                                                                "properties": {
                                                                    "coordinates": {
                                                                        "description": "The coordinates of the geometry",
                                                                        "items": {
                                                                            "example": [
                                                                                [
                                                                                    5.9213973,
                                                                                    49.7208867
                                                                                ],
                                                                                [
                                                                                    6.92140223,
                                                                                    49.7208946
                                                                                ],
                                                                                [
                                                                                    6.92143543,
                                                                                    49.7202454
                                                                                ],
                                                                                [
                                                                                    5.9213973,
                                                                                    49.7208867
                                                                                ]
                                                                            ],
                                                                            "items": {
                                                                                "items": {
                                                                                    "type": "numeric"
                                                                                },
                                                                                "maxItems": 2,
                                                                                "minItems": 2,
                                                                                "type": "array"
                                                                            },
                                                                            "minItems": 4,
                                                                            "type": "array"
                                                                        },
                                                                        "minItems": 1,
                                                                        "type": "array"
                                                                    },
                                                                    "type": {
                                                                        "description": "The geometry type.",
                                                                        "example": "Polygon",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "properties": {
                                                                "description": "Additional properties of the cluster.",
                                                                "properties": {
                                                                    "cluster_id": {
                                                                        "description": "The cluster id.",
                                                                        "type": "integer"
                                                                    },
                                                                    "size": {
                                                                        "description": "The size of the cluster; how many geometries the cluster contains.",
                                                                        "example": 420,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": {
                                                                "example": "Feature",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "minItems": 0,
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "example": "FeatureCollection",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "clustersStatic": {
                                            "description": "A PNG static map with the clustered geometries, base64 encoded.",
                                            "type": "string"
                                        },
                                        "convexHull": {
                                            "description": "The Well-Known-Text representation of the Convex Hull for all geometries.",
                                            "example": "POLYGON ((6.35585 49.4439, 5.73602 49.8337, 6.36222 49.4469, 6.35691 49.4439, 6.35585 49.4439))",
                                            "type": "string"
                                        },
                                        "convexHullStatic": {
                                            "description": "A PNG static map showing the convex hull, base64 encoded.",
                                            "type": "string"
                                        },
                                        "count": {
                                            "additionalProperties": {
                                                "description": "The not null values for the specific attribute.",
                                                "example": 2334,
                                                "type": "integer"
                                            },
                                            "description": "Count not null values for each attribute in the dataset. The key is the attribute name.",
                                            "type": "object"
                                        },
                                        "crs": {
                                            "description": "The short name of the dataset's native Coordinate Reference System (CRS).",
                                            "example": "EPSG:4326",
                                            "type": "string"
                                        },
                                        "datatypes": {
                                            "additionalProperties": {
                                                "description": "The datatype of the specific attribute.",
                                                "examples": [
                                                    "str",
                                                    "int64",
                                                    "float64"
                                                ],
                                                "type": "string"
                                            },
                                            "description": "The datatypes for each of the dataset's attributes. The key is the attribute name.",
                                            "type": "object"
                                        },
                                        "distinct": {
                                            "additionalProperties": {
                                                "description": "A list with the distinct values for the specific attribute.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "description": "The distinct values for each of the *categorical* attributes in the dataset. The key is the attribute name.",
                                            "example": {
                                                "categoricalAttr1": [
                                                    "TRANSPORT",
                                                    "SETTLEMENTS",
                                                    "BUSINESS"
                                                ],
                                                "categoricalAttr2": [
                                                    "LU",
                                                    "DE",
                                                    "GR"
                                                ]
                                            },
                                            "type": "object"
                                        },
                                        "distribution": {
                                            "additionalProperties": {
                                                "additionalProperties": {
                                                    "description": "The frequency of the specific value in the attribute.",
                                                    "example": 244,
                                                    "type": "integer"
                                                },
                                                "description": "The frequency of each value for the specific attribute. The key is the value.",
                                                "type": "object"
                                            },
                                            "description": "The distribution of the values for each *categorical* attribute in the dataset. The key is the attribute name.",
                                            "example": {
                                                "categoricalAttr1": {
                                                    "value1": 632,
                                                    "value2": 432,
                                                    "value3": 332
                                                },
                                                "categoricalAttr2": {
                                                    "value4": 434,
                                                    "value5": 232,
                                                    "value6": 134
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "featureCount": {
                                            "description": "The number of features in the dataset.",
                                            "example": 23432,
                                            "type": "integer"
                                        },
                                        "heatmap": {
                                            "description": "A GeoJSON with a heatmap of the geometries.",
                                            "properties": {
                                                "features": {
                                                    "description": "Each feature represents a contour plot.",
                                                    "items": {
                                                        "properties": {
                                                            "geometry": {
                                                                "description": "The geometry of the contour.",
                                                                "properties": {
                                                                    "coordinates": {
                                                                        "description": "The coordinates of the geometry",
                                                                        "items": {
                                                                            "items": {
                                                                                "example": [
                                                                                    [
                                                                                        19.51254,
                                                                                        0.00268
                                                                                    ],
                                                                                    [
                                                                                        19.512542,
                                                                                        0.002677
                                                                                    ],
                                                                                    [
                                                                                        19.512545,
                                                                                        0.002671
                                                                                    ],
                                                                                    [
                                                                                        19.51254,
                                                                                        0.00268
                                                                                    ]
                                                                                ],
                                                                                "items": {
                                                                                    "items": {
                                                                                        "type": "numeric"
                                                                                    },
                                                                                    "maxItems": 2,
                                                                                    "minItems": 2,
                                                                                    "type": "array"
                                                                                },
                                                                                "minItems": 4,
                                                                                "type": "array"
                                                                            },
                                                                            "minItems": 1,
                                                                            "type": "array"
                                                                        },
                                                                        "minItems": 1,
                                                                        "type": "array"
                                                                    },
                                                                    "type": {
                                                                        "description": "The geometry type.",
                                                                        "example": "MultiPolygon",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "properties": {
                                                                "description": "Style properties for the plot.",
                                                                "properties": {
                                                                    "fill": {
                                                                        "description": "The hex color code for the fill.",
                                                                        "example": "#002ed1",
                                                                        "type": "string"
                                                                    },
                                                                    "fill-opacity": {
                                                                        "description": "The opacity for the fill color (0-1).",
                                                                        "example": 0.4,
                                                                        "type": "numeric"
                                                                    },
                                                                    "stroke": {
                                                                        "description": "The hex color code for the stroke.",
                                                                        "example": "#002ed1",
                                                                        "type": "string"
                                                                    },
                                                                    "stroke-opacity": {
                                                                        "description": "The opacity for the stroke (0-1).",
                                                                        "example": 1,
                                                                        "type": "numeric"
                                                                    },
                                                                    "stroke-width": {
                                                                        "description": "The width (in pixels) of the stroke.",
                                                                        "example": 1,
                                                                        "type": "numeric"
                                                                    },
                                                                    "title": {
                                                                        "description": "The title for the specific contour.",
                                                                        "example": "0.00-1.50",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": {
                                                                "example": "Feature",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "minItems": 0,
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "example": "FeatureCollection",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "heatmapStatic": {
                                            "description": "A PNG static heatmap, base64 encoded.",
                                            "type": "string"
                                        },
                                        "mbr": {
                                            "description": "The Well-Known-Text representation of the Minimum Bounding Rectangle (MBR).",
                                            "example": "POLYGON ((6.5206 49.4439, 6.5206 50.1845, 5.73398 50.1845, 5.73398 49.4439, 6.5206 49.4439))",
                                            "type": "string"
                                        },
                                        "mbrStatic": {
                                            "description": "A PNG static map with the MBR, base64 encoded.",
                                            "type": "string"
                                        },
                                        "quantiles": {
                                            "description": "The 5, 25, 50, 75, 95 quantiles for each of the numeric attributes in the dataset.",
                                            "properties": {
                                                "5": {
                                                    "additionalProperties": {
                                                        "description": "The 5-quantile value for the specific attribute.",
                                                        "example": 0.3,
                                                        "type": "numeric"
                                                    },
                                                    "description": "The value of the 5-quantile for each of the numeric attributes. The key is the attribute name.",
                                                    "type": "object"
                                                },
                                                "25": {
                                                    "additionalProperties": {
                                                        "description": "The 25-quantile value for the specific attribute.",
                                                        "example": 0.4,
                                                        "type": "numeric"
                                                    },
                                                    "description": "The value of the 25-quantile for each of the numeric attributes. The key is the attribute name.",
                                                    "type": "object"
                                                },
                                                "50": {
                                                    "additionalProperties": {
                                                        "description": "The 50-quantile value for the specific attribute.",
                                                        "example": 0.43,
                                                        "type": "numeric"
                                                    },
                                                    "description": "The value of the 50-quantile for each of the numeric attributes. The key is the attribute name.",
                                                    "type": "object"
                                                },
                                                "75": {
                                                    "additionalProperties": {
                                                        "description": "The 75-quantile value for the specific attribute.",
                                                        "example": 0.45,
                                                        "type": "numeric"
                                                    },
                                                    "description": "The value of the 75-quantile for each of the numeric attributes. The key is the attribute name.",
                                                    "type": "object"
                                                },
                                                "95": {
                                                    "additionalProperties": {
                                                        "description": "The 95-quantile value for the specific attribute.",
                                                        "example": 0.48,
                                                        "type": "numeric"
                                                    },
                                                    "description": "The value of the 95-quantile for each of the numeric attributes. The key is the attribute name.",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "recurring": {
                                            "description": "The most frequent values for each of the attributes in the dataset.",
                                            "type": "object"
                                        },
                                        "statistics": {
                                            "description": "Descriptive statistics (*min*, *max*, *mean*, *median*, *std*, *sum*) for the numerical attributes in the dataset.",
                                            "properties": {
                                                "max": {
                                                    "additionalProperties": {
                                                        "type": "numeric"
                                                    },
                                                    "description": "The *maximum* value for each of the numeric attributes. The key is the attribute name.",
                                                    "example": {
                                                        "attr1": 10.1,
                                                        "attr2": 8.7
                                                    },
                                                    "type": "object"
                                                },
                                                "mean": {
                                                    "additionalProperties": {
                                                        "type": "numeric"
                                                    },
                                                    "description": "The *mean* value for each of the numeric attributes. The key is the attribute name.",
                                                    "example": {
                                                        "attr1": 5.2,
                                                        "attr2": 4.6
                                                    },
                                                    "type": "object"
                                                },
                                                "median": {
                                                    "additionalProperties": {
                                                        "type": "numeric"
                                                    },
                                                    "description": "The *median* value for each of the numeric attributes. The key is the attribute name.",
                                                    "example": {
                                                        "attr1": 5.3,
                                                        "attr2": 4.5
                                                    },
                                                    "type": "object"
                                                },
                                                "min": {
                                                    "additionalProperties": {
                                                        "type": "numeric"
                                                    },
                                                    "description": "The *minimum* value for each of the numeric attributes. The key is the attribute name.",
                                                    "example": {
                                                        "attr1": 0.4,
                                                        "attr2": 0.2
                                                    },
                                                    "type": "object"
                                                },
                                                "std": {
                                                    "additionalProperties": {
                                                        "type": "numeric"
                                                    },
                                                    "description": "The *standard deviation* for each of the numeric attributes. The key is the attribute name.",
                                                    "example": {
                                                        "attr1": 0.8,
                                                        "attr2": 0.6
                                                    },
                                                    "type": "object"
                                                },
                                                "sum": {
                                                    "additionalProperties": {
                                                        "type": "numeric"
                                                    },
                                                    "description": "The *sum* of of all values for each of the numeric attributes. The key is the attribute name.",
                                                    "example": {
                                                        "attr1": 123.3,
                                                        "attr2": 96.3
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "thumbnail": {
                                            "description": "A PNG thumbnail of the dataset, base64 encoded.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Profiling completed and returned."
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "endpoint": {
                                            "description": "The *resource* endpoint to get the resulting resource when ready.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "The *status* endpoint to poll for the status of the request.",
                                            "type": "string"
                                        },
                                        "ticket": {
                                            "description": "The ticket corresponding to the request.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Accepted for processing, but profile has not been completed.",
                        "links": {
                            "GetStatus": {
                                "description": "The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.",
                                "operationId": "getStatus",
                                "parameters": {
                                    "ticket": "$response.body#/ticket"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client error."
                    }
                },
                "summary": "Profile a vector file that is provided with the request",
                "tags": [
                    "Profile"
                ]
            }
        },
        "/profile/path/netcdf": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "aspect_ratio": {
                                        "description": "The aspect ratio of the static map to be generated",
                                        "type": "float"
                                    },
                                    "basemap_name": {
                                        "default": "Mapnik",
                                        "description": "The name of the basemap",
                                        "type": "string"
                                    },
                                    "basemap_provider": {
                                        "default": "OpenStreetMap",
                                        "description": "The basemap provider",
                                        "type": "string"
                                    },
                                    "crs": {
                                        "description": "The dataset's crs",
                                        "type": "string"
                                    },
                                    "height": {
                                        "description": "The height (in pixels) of the static map to be generated",
                                        "type": "integer"
                                    },
                                    "lat": {
                                        "description": "The column name with the latitude information",
                                        "type": "string"
                                    },
                                    "lon": {
                                        "description": "The column name with the longitude information",
                                        "type": "string"
                                    },
                                    "resource": {
                                        "description": "The spatial file's.",
                                        "format": "binary",
                                        "type": "string"
                                    },
                                    "response": {
                                        "default": "prompt",
                                        "description": "Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.",
                                        "enum": [
                                            "prompt",
                                            "deferred"
                                        ],
                                        "type": "string"
                                    },
                                    "time": {
                                        "description": "The column name with the time information",
                                        "type": "string"
                                    },
                                    "width": {
                                        "description": "The width (in pixels) of the static map to be generated",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "resource"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "assetType": {
                                            "description": "The type of the asset (always *NetCDF*).",
                                            "example": "NetCDF",
                                            "type": "string"
                                        },
                                        "dimensionsList": {
                                            "description": "A list with the dimensions.",
                                            "example": [
                                                "lon",
                                                "lat",
                                                "level",
                                                "time"
                                            ],
                                            "items": {
                                                "description": "The dimension name.",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "dimensionsProperties": {
                                            "additionalProperties": {
                                                "description": "The properties of the specific dimension. **Note**: below are only the common properties; other custom properties may also be present.",
                                                "properties": {
                                                    "long_name": {
                                                        "description": "The long name of the dimension.",
                                                        "example": "longitude",
                                                        "type": "string"
                                                    },
                                                    "size": {
                                                        "description": "The size of the dimension variable.",
                                                        "example": 128,
                                                        "type": "integer"
                                                    },
                                                    "type": {
                                                        "description": "The datatype of the dimension.",
                                                        "example": "float64",
                                                        "type": "string"
                                                    },
                                                    "units": {
                                                        "description": "A description of the dimension's units.",
                                                        "example": "degrees_east",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "description": "The properties of each dimension. The key is the dimension.",
                                            "type": "object"
                                        },
                                        "dimensionsSize": {
                                            "description": "The number of the dimensions.",
                                            "example": 4,
                                            "type": "integer"
                                        },
                                        "mbr": {
                                            "description": "The Well-Known-Text representation of the Minimum Bounding Rectangle (MBR).",
                                            "example": "POLYGON ((6.5206 49.4439, 6.5206 50.1845, 5.73398 50.1845, 5.73398 49.4439, 6.5206 49.4439))",
                                            "type": "string"
                                        },
                                        "mbrStatic": {
                                            "description": "A PNG static map with the MBR, base64 encoded.",
                                            "type": "string"
                                        },
                                        "metadata": {
                                            "additionalProperties": {
                                                "type": "string"
                                            },
                                            "description": "The metadata object as written in the file. The key is a free field for the data provider, usually describing the given information.",
                                            "type": "object"
                                        },
                                        "noDataValues": {
                                            "additionalProperties": {
                                                "description": "The no-data value for the specific variable.",
                                                "type": "numeric"
                                            },
                                            "description": "The no-data value for each the variables. The key is the variable.",
                                            "type": "object"
                                        },
                                        "statistics": {
                                            "additionalProperties": {
                                                "description": "Descriptive statistics for the specific variable.",
                                                "properties": {
                                                    "contiguous": {
                                                        "description": "Whether the data are contiguous or not.",
                                                        "type": "boolean"
                                                    },
                                                    "count": {
                                                        "description": "The number of values for the specific variable.",
                                                        "example": 220,
                                                        "type": "integer"
                                                    },
                                                    "max": {
                                                        "description": "The maximum value of the specific variable.",
                                                        "example": 20.6,
                                                        "type": "numeric"
                                                    },
                                                    "mean": {
                                                        "description": "The mean value of the specific variable.",
                                                        "example": 10.7,
                                                        "type": "numeric"
                                                    },
                                                    "min": {
                                                        "description": "The minimum value of the specific variable.",
                                                        "example": 0.4,
                                                        "type": "numeric"
                                                    },
                                                    "missing": {
                                                        "description": "The number of missing values for the specific variable.",
                                                        "example": 0,
                                                        "type": "integer"
                                                    },
                                                    "std": {
                                                        "description": "The standard deviation for the specific variable.",
                                                        "example": 2.4,
                                                        "type": "numeric"
                                                    },
                                                    "variance": {
                                                        "description": "The variance of the specific variable.",
                                                        "example": 7.9,
                                                        "type": "numeric"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "description": "Descriptive statistics for each of the variables. The key is the variable.",
                                            "type": "object"
                                        },
                                        "temporalExtent": {
                                            "description": "A free-text string representing the temporal extend of the dataset.",
                                            "example": "0.000000 - 720.000000 hours",
                                            "type": "string"
                                        },
                                        "variablesList": {
                                            "description": "A list with the variables.",
                                            "example": [
                                                "temperature",
                                                "pm1.0",
                                                "pm2.5",
                                                "pm10"
                                            ],
                                            "items": {
                                                "description": "The name of the variable.",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "variablesProperties": {
                                            "additionalProperties": {
                                                "description": "The properties of the specific variable. **Note**: below are only the common properties; other custom properties may also be present.",
                                                "properties": {
                                                    "dimensions": {
                                                        "description": "A list of the dimensions that this variable depends on.",
                                                        "example": [
                                                            "lat",
                                                            "lon"
                                                        ],
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "size": {
                                                        "description": "The size of the variable.",
                                                        "example": 128,
                                                        "type": "integer"
                                                    },
                                                    "type": {
                                                        "description": "The datatype of the variable.",
                                                        "example": "float64",
                                                        "type": "string"
                                                    },
                                                    "units": {
                                                        "description": "A description of the variable's units.",
                                                        "example": "degrees_east",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "description": "The properties for each variable. The key is the variable.",
                                            "type": "object"
                                        },
                                        "variablesSize": {
                                            "description": "Number of variables.",
                                            "example": 12,
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Profiling completed and returned."
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "endpoint": {
                                            "description": "The *resource* endpoint to get the resulting resource when ready.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "The *status* endpoint to poll for the status of the request.",
                                            "type": "string"
                                        },
                                        "ticket": {
                                            "description": "The ticket corresponding to the request.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Accepted for processing, but profile has not been completed.",
                        "links": {
                            "GetStatus": {
                                "description": "The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.",
                                "operationId": "getStatus",
                                "parameters": {
                                    "ticket": "$response.body#/ticket"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client error."
                    }
                },
                "summary": "Profile a NetCDF file that is provided with the request",
                "tags": [
                    "Profile"
                ]
            }
        },
        "/profile/path/raster": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "resource": {
                                        "description": "The spatial file's path.",
                                        "format": "binary",
                                        "type": "string"
                                    },
                                    "response": {
                                        "default": "prompt",
                                        "description": "Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.",
                                        "enum": [
                                            "prompt",
                                            "deferred"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "resource"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "assetType": {
                                            "description": "The type of the asset (always *raster*).",
                                            "example": "raster",
                                            "type": "string"
                                        },
                                        "cog": {
                                            "description": "In case the raster is GeoTiff, whether it is Cloud-Optimized or not.",
                                            "type": "boolean"
                                        },
                                        "colorInterpretation": {
                                            "description": "The Color Interpretation for each band.",
                                            "items": {
                                                "description": "The color interpretation for the n-th band.",
                                                "example": "RED",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "crs": {
                                            "description": "The short name of the dataset's native Coordinate Reference System (CRS).",
                                            "example": "EPSG:4326",
                                            "type": "string"
                                        },
                                        "datatypes": {
                                            "description": "The data type of each band.",
                                            "items": {
                                                "description": "The data type of the n-th band.",
                                                "example": "Byte",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "histogram": {
                                            "description": "The default histogram of the raster for each band.",
                                            "example": [
                                                -0.5,
                                                255.5,
                                                256,
                                                [
                                                    2513898,
                                                    31982,
                                                    11152,
                                                    26086,
                                                    12858
                                                ]
                                            ],
                                            "items": {
                                                "description": "The default histogram of the n-th band. It contains the minimum and the maximum Pixel Value, the total number of pixel values, and an array with the frequencies for each Pixel Value.",
                                                "items": {
                                                    "anyOf": [
                                                        {
                                                            "description": "The minimum Pixel Value.",
                                                            "type": "numeric"
                                                        },
                                                        {
                                                            "description": "The maximum Pixel Value.",
                                                            "type": "numeric"
                                                        },
                                                        {
                                                            "description": "The total number of pixel values.",
                                                            "type": "integer"
                                                        },
                                                        {
                                                            "description": "An array with the frequencies for each Pixel Value (has lentgh equal to the total number of Pixel Values).",
                                                            "type": "array"
                                                        }
                                                    ]
                                                },
                                                "type": "array"
                                            },
                                            "type": "array"
                                        },
                                        "info": {
                                            "description": "General information about the raster file.",
                                            "properties": {
                                                "bands": {
                                                    "description": "A list with the bands included in the raster.",
                                                    "example": [
                                                        "RED"
                                                    ],
                                                    "items": {
                                                        "description": "The name of the band.",
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "driver": {
                                                    "description": "The driver used to open the raster.",
                                                    "example": "GeoTIFF",
                                                    "type": "string"
                                                },
                                                "files": {
                                                    "description": "A list of the files associated with the raster.",
                                                    "example": [
                                                        "example.tif"
                                                    ],
                                                    "items": {
                                                        "description": "Filename.",
                                                        "type": "string"
                                                    },
                                                    "type": "array"
                                                },
                                                "height": {
                                                    "description": "The height in pixels.",
                                                    "example": 1080,
                                                    "type": "integer"
                                                },
                                                "imageStructure": {
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    },
                                                    "description": "Various values describing the image structure. The keys depend on the raster.",
                                                    "example": {
                                                        "COMPRESSION": "YCbCr JPEG",
                                                        "INTERLEAVE": "PIXEL",
                                                        "SOURCE_COLOR_SPACE": "YCbCr"
                                                    },
                                                    "type": "object"
                                                },
                                                "metadata": {
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    },
                                                    "description": "Metadata of the the raster as written in the file. The keys are free-text.",
                                                    "example": {
                                                        "AREA_OR_POINT": "Point",
                                                        "TIFFTAG_MAXSAMPLEVALUE": 254
                                                    },
                                                    "type": "object"
                                                },
                                                "width": {
                                                    "description": "The width in pixels.",
                                                    "example": 1920,
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "mbr": {
                                            "description": "The Well-Known-Text representation of the Minimum Bounding Rectangle (MBR).",
                                            "example": "POLYGON ((6.5206 49.4439, 6.5206 50.1845, 5.73398 50.1845, 5.73398 49.4439, 6.5206 49.4439))",
                                            "type": "string"
                                        },
                                        "mbrStatic": {
                                            "description": "A PNG static map with the MBR, base64 encoded.",
                                            "type": "string"
                                        },
                                        "noDataValue": {
                                            "description": "The no-data value of each band.",
                                            "items": {
                                                "description": "The no-data value of the n-th band.",
                                                "example": null,
                                                "type": "numeric"
                                            },
                                            "type": "array"
                                        },
                                        "numberOfBands": {
                                            "description": "The number of bands in the raster.",
                                            "example": 1,
                                            "type": "integer"
                                        },
                                        "resolution": {
                                            "description": "The resolution for each axis, and the unit of measurement.",
                                            "properties": {
                                                "unit": {
                                                    "description": "The unit of resolution.",
                                                    "example": "metre",
                                                    "type": "string"
                                                },
                                                "x": {
                                                    "description": "Resolution in x-axis.",
                                                    "example": 0.16726222,
                                                    "type": "numeric"
                                                },
                                                "y": {
                                                    "description": "Resolution in y-axis.",
                                                    "example": 0.16726222,
                                                    "type": "numeric"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "statistics": {
                                            "description": "A list with descriptive statistics for each band of the raster file.",
                                            "items": {
                                                "description": "Descriptive statistics for the n-th band.",
                                                "properties": {
                                                    "max": {
                                                        "description": "The maximum value in the band.",
                                                        "example": 255.0,
                                                        "type": "numeric"
                                                    },
                                                    "mean": {
                                                        "description": "The mean value in the band.",
                                                        "example": 180.5475,
                                                        "type": "numeric"
                                                    },
                                                    "min": {
                                                        "description": "The minimun value in the band.",
                                                        "example": 0.0,
                                                        "type": "numeric"
                                                    },
                                                    "std": {
                                                        "description": "The standard deviation in the band.",
                                                        "example": 46.4463,
                                                        "type": "numeric"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Profiling completed and returned."
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "endpoint": {
                                            "description": "The *resource* endpoint to get the resulting resource when ready.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "The *status* endpoint to poll for the status of the request.",
                                            "type": "string"
                                        },
                                        "ticket": {
                                            "description": "The ticket corresponding to the request.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Accepted for processing, but profile has not been completed.",
                        "links": {
                            "GetStatus": {
                                "description": "The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.",
                                "operationId": "getStatus",
                                "parameters": {
                                    "ticket": "$response.body#/ticket"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client error."
                    }
                },
                "summary": "Profile a raster file that is provided with the request",
                "tags": [
                    "Profile"
                ]
            }
        },
        "/profile/path/vector": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "aspect_ratio": {
                                        "description": "The aspect ratio of the static map to be generated",
                                        "type": "float"
                                    },
                                    "basemap_name": {
                                        "default": "Mapnik",
                                        "description": "The name of the basemap",
                                        "type": "string"
                                    },
                                    "basemap_provider": {
                                        "default": "OpenStreetMap",
                                        "description": "The basemap provider",
                                        "type": "string"
                                    },
                                    "crs": {
                                        "description": "The dataset's crs",
                                        "type": "string"
                                    },
                                    "encoding": {
                                        "default": "utf-8",
                                        "description": "File encoding",
                                        "type": "string"
                                    },
                                    "geometry": {
                                        "description": "The column name with the geometry information",
                                        "type": "string"
                                    },
                                    "height": {
                                        "description": "The height (in pixels) of the static map to be generated",
                                        "type": "integer"
                                    },
                                    "lat": {
                                        "description": "The column name with the latitude information",
                                        "type": "string"
                                    },
                                    "lon": {
                                        "description": "The column name with the longitude information",
                                        "type": "string"
                                    },
                                    "resource": {
                                        "description": "The spatial file's path.",
                                        "format": "binary",
                                        "type": "string"
                                    },
                                    "response": {
                                        "default": "prompt",
                                        "description": "Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.",
                                        "enum": [
                                            "prompt",
                                            "deferred"
                                        ],
                                        "type": "string"
                                    },
                                    "width": {
                                        "description": "The width (in pixels) of the static map to be generated",
                                        "type": "integer"
                                    }
                                },
                                "required": [
                                    "resource"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "assetType": {
                                            "description": "One of *tabular* or *vector*.",
                                            "example": "vector",
                                            "type": "string"
                                        },
                                        "attributes": {
                                            "description": "A list with all attributes of the dataset.",
                                            "example": [
                                                "attributeName1",
                                                "attributeName2",
                                                "attributeName3"
                                            ],
                                            "items": {
                                                "description": "The attribute name.",
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "clusters": {
                                            "description": "A GeoJSON containing the clustered geometries.",
                                            "properties": {
                                                "features": {
                                                    "description": "Each feature represents one cluster.",
                                                    "items": {
                                                        "properties": {
                                                            "geometry": {
                                                                "description": "The geometry of the cluster.",
                                                                "properties": {
                                                                    "coordinates": {
                                                                        "description": "The coordinates of the geometry",
                                                                        "items": {
                                                                            "example": [
                                                                                [
                                                                                    5.9213973,
                                                                                    49.7208867
                                                                                ],
                                                                                [
                                                                                    6.92140223,
                                                                                    49.7208946
                                                                                ],
                                                                                [
                                                                                    6.92143543,
                                                                                    49.7202454
                                                                                ],
                                                                                [
                                                                                    5.9213973,
                                                                                    49.7208867
                                                                                ]
                                                                            ],
                                                                            "items": {
                                                                                "items": {
                                                                                    "type": "numeric"
                                                                                },
                                                                                "maxItems": 2,
                                                                                "minItems": 2,
                                                                                "type": "array"
                                                                            },
                                                                            "minItems": 4,
                                                                            "type": "array"
                                                                        },
                                                                        "minItems": 1,
                                                                        "type": "array"
                                                                    },
                                                                    "type": {
                                                                        "description": "The geometry type.",
                                                                        "example": "Polygon",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "properties": {
                                                                "description": "Additional properties of the cluster.",
                                                                "properties": {
                                                                    "cluster_id": {
                                                                        "description": "The cluster id.",
                                                                        "type": "integer"
                                                                    },
                                                                    "size": {
                                                                        "description": "The size of the cluster; how many geometries the cluster contains.",
                                                                        "example": 420,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": {
                                                                "example": "Feature",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "minItems": 0,
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "example": "FeatureCollection",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "clustersStatic": {
                                            "description": "A PNG static map with the clustered geometries, base64 encoded.",
                                            "type": "string"
                                        },
                                        "convexHull": {
                                            "description": "The Well-Known-Text representation of the Convex Hull for all geometries.",
                                            "example": "POLYGON ((6.35585 49.4439, 5.73602 49.8337, 6.36222 49.4469, 6.35691 49.4439, 6.35585 49.4439))",
                                            "type": "string"
                                        },
                                        "convexHullStatic": {
                                            "description": "A PNG static map showing the convex hull, base64 encoded.",
                                            "type": "string"
                                        },
                                        "count": {
                                            "additionalProperties": {
                                                "description": "The not null values for the specific attribute.",
                                                "example": 2334,
                                                "type": "integer"
                                            },
                                            "description": "Count not null values for each attribute in the dataset. The key is the attribute name.",
                                            "type": "object"
                                        },
                                        "crs": {
                                            "description": "The short name of the dataset's native Coordinate Reference System (CRS).",
                                            "example": "EPSG:4326",
                                            "type": "string"
                                        },
                                        "datatypes": {
                                            "additionalProperties": {
                                                "description": "The datatype of the specific attribute.",
                                                "examples": [
                                                    "str",
                                                    "int64",
                                                    "float64"
                                                ],
                                                "type": "string"
                                            },
                                            "description": "The datatypes for each of the dataset's attributes. The key is the attribute name.",
                                            "type": "object"
                                        },
                                        "distinct": {
                                            "additionalProperties": {
                                                "description": "A list with the distinct values for the specific attribute.",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array"
                                            },
                                            "description": "The distinct values for each of the *categorical* attributes in the dataset. The key is the attribute name.",
                                            "example": {
                                                "categoricalAttr1": [
                                                    "TRANSPORT",
                                                    "SETTLEMENTS",
                                                    "BUSINESS"
                                                ],
                                                "categoricalAttr2": [
                                                    "LU",
                                                    "DE",
                                                    "GR"
                                                ]
                                            },
                                            "type": "object"
                                        },
                                        "distribution": {
                                            "additionalProperties": {
                                                "additionalProperties": {
                                                    "description": "The frequency of the specific value in the attribute.",
                                                    "example": 244,
                                                    "type": "integer"
                                                },
                                                "description": "The frequency of each value for the specific attribute. The key is the value.",
                                                "type": "object"
                                            },
                                            "description": "The distribution of the values for each *categorical* attribute in the dataset. The key is the attribute name.",
                                            "example": {
                                                "categoricalAttr1": {
                                                    "value1": 632,
                                                    "value2": 432,
                                                    "value3": 332
                                                },
                                                "categoricalAttr2": {
                                                    "value4": 434,
                                                    "value5": 232,
                                                    "value6": 134
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "featureCount": {
                                            "description": "The number of features in the dataset.",
                                            "example": 23432,
                                            "type": "integer"
                                        },
                                        "heatmap": {
                                            "description": "A GeoJSON with a heatmap of the geometries.",
                                            "properties": {
                                                "features": {
                                                    "description": "Each feature represents a contour plot.",
                                                    "items": {
                                                        "properties": {
                                                            "geometry": {
                                                                "description": "The geometry of the contour.",
                                                                "properties": {
                                                                    "coordinates": {
                                                                        "description": "The coordinates of the geometry",
                                                                        "items": {
                                                                            "items": {
                                                                                "example": [
                                                                                    [
                                                                                        19.51254,
                                                                                        0.00268
                                                                                    ],
                                                                                    [
                                                                                        19.512542,
                                                                                        0.002677
                                                                                    ],
                                                                                    [
                                                                                        19.512545,
                                                                                        0.002671
                                                                                    ],
                                                                                    [
                                                                                        19.51254,
                                                                                        0.00268
                                                                                    ]
                                                                                ],
                                                                                "items": {
                                                                                    "items": {
                                                                                        "type": "numeric"
                                                                                    },
                                                                                    "maxItems": 2,
                                                                                    "minItems": 2,
                                                                                    "type": "array"
                                                                                },
                                                                                "minItems": 4,
                                                                                "type": "array"
                                                                            },
                                                                            "minItems": 1,
                                                                            "type": "array"
                                                                        },
                                                                        "minItems": 1,
                                                                        "type": "array"
                                                                    },
                                                                    "type": {
                                                                        "description": "The geometry type.",
                                                                        "example": "MultiPolygon",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "properties": {
                                                                "description": "Style properties for the plot.",
                                                                "properties": {
                                                                    "fill": {
                                                                        "description": "The hex color code for the fill.",
                                                                        "example": "#002ed1",
                                                                        "type": "string"
                                                                    },
                                                                    "fill-opacity": {
                                                                        "description": "The opacity for the fill color (0-1).",
                                                                        "example": 0.4,
                                                                        "type": "numeric"
                                                                    },
                                                                    "stroke": {
                                                                        "description": "The hex color code for the stroke.",
                                                                        "example": "#002ed1",
                                                                        "type": "string"
                                                                    },
                                                                    "stroke-opacity": {
                                                                        "description": "The opacity for the stroke (0-1).",
                                                                        "example": 1,
                                                                        "type": "numeric"
                                                                    },
                                                                    "stroke-width": {
                                                                        "description": "The width (in pixels) of the stroke.",
                                                                        "example": 1,
                                                                        "type": "numeric"
                                                                    },
                                                                    "title": {
                                                                        "description": "The title for the specific contour.",
                                                                        "example": "0.00-1.50",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": {
                                                                "example": "Feature",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "minItems": 0,
                                                    "type": "array"
                                                },
                                                "type": {
                                                    "example": "FeatureCollection",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "heatmapStatic": {
                                            "description": "A PNG static heatmap, base64 encoded.",
                                            "type": "string"
                                        },
                                        "mbr": {
                                            "description": "The Well-Known-Text representation of the Minimum Bounding Rectangle (MBR).",
                                            "example": "POLYGON ((6.5206 49.4439, 6.5206 50.1845, 5.73398 50.1845, 5.73398 49.4439, 6.5206 49.4439))",
                                            "type": "string"
                                        },
                                        "mbrStatic": {
                                            "description": "A PNG static map with the MBR, base64 encoded.",
                                            "type": "string"
                                        },
                                        "quantiles": {
                                            "description": "The 5, 25, 50, 75, 95 quantiles for each of the numeric attributes in the dataset.",
                                            "properties": {
                                                "5": {
                                                    "additionalProperties": {
                                                        "description": "The 5-quantile value for the specific attribute.",
                                                        "example": 0.3,
                                                        "type": "numeric"
                                                    },
                                                    "description": "The value of the 5-quantile for each of the numeric attributes. The key is the attribute name.",
                                                    "type": "object"
                                                },
                                                "25": {
                                                    "additionalProperties": {
                                                        "description": "The 25-quantile value for the specific attribute.",
                                                        "example": 0.4,
                                                        "type": "numeric"
                                                    },
                                                    "description": "The value of the 25-quantile for each of the numeric attributes. The key is the attribute name.",
                                                    "type": "object"
                                                },
                                                "50": {
                                                    "additionalProperties": {
                                                        "description": "The 50-quantile value for the specific attribute.",
                                                        "example": 0.43,
                                                        "type": "numeric"
                                                    },
                                                    "description": "The value of the 50-quantile for each of the numeric attributes. The key is the attribute name.",
                                                    "type": "object"
                                                },
                                                "75": {
                                                    "additionalProperties": {
                                                        "description": "The 75-quantile value for the specific attribute.",
                                                        "example": 0.45,
                                                        "type": "numeric"
                                                    },
                                                    "description": "The value of the 75-quantile for each of the numeric attributes. The key is the attribute name.",
                                                    "type": "object"
                                                },
                                                "95": {
                                                    "additionalProperties": {
                                                        "description": "The 95-quantile value for the specific attribute.",
                                                        "example": 0.48,
                                                        "type": "numeric"
                                                    },
                                                    "description": "The value of the 95-quantile for each of the numeric attributes. The key is the attribute name.",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "recurring": {
                                            "description": "The most frequent values for each of the attributes in the dataset.",
                                            "type": "object"
                                        },
                                        "statistics": {
                                            "description": "Descriptive statistics (*min*, *max*, *mean*, *median*, *std*, *sum*) for the numerical attributes in the dataset.",
                                            "properties": {
                                                "max": {
                                                    "additionalProperties": {
                                                        "type": "numeric"
                                                    },
                                                    "description": "The *maximum* value for each of the numeric attributes. The key is the attribute name.",
                                                    "example": {
                                                        "attr1": 10.1,
                                                        "attr2": 8.7
                                                    },
                                                    "type": "object"
                                                },
                                                "mean": {
                                                    "additionalProperties": {
                                                        "type": "numeric"
                                                    },
                                                    "description": "The *mean* value for each of the numeric attributes. The key is the attribute name.",
                                                    "example": {
                                                        "attr1": 5.2,
                                                        "attr2": 4.6
                                                    },
                                                    "type": "object"
                                                },
                                                "median": {
                                                    "additionalProperties": {
                                                        "type": "numeric"
                                                    },
                                                    "description": "The *median* value for each of the numeric attributes. The key is the attribute name.",
                                                    "example": {
                                                        "attr1": 5.3,
                                                        "attr2": 4.5
                                                    },
                                                    "type": "object"
                                                },
                                                "min": {
                                                    "additionalProperties": {
                                                        "type": "numeric"
                                                    },
                                                    "description": "The *minimum* value for each of the numeric attributes. The key is the attribute name.",
                                                    "example": {
                                                        "attr1": 0.4,
                                                        "attr2": 0.2
                                                    },
                                                    "type": "object"
                                                },
                                                "std": {
                                                    "additionalProperties": {
                                                        "type": "numeric"
                                                    },
                                                    "description": "The *standard deviation* for each of the numeric attributes. The key is the attribute name.",
                                                    "example": {
                                                        "attr1": 0.8,
                                                        "attr2": 0.6
                                                    },
                                                    "type": "object"
                                                },
                                                "sum": {
                                                    "additionalProperties": {
                                                        "type": "numeric"
                                                    },
                                                    "description": "The *sum* of of all values for each of the numeric attributes. The key is the attribute name.",
                                                    "example": {
                                                        "attr1": 123.3,
                                                        "attr2": 96.3
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "thumbnail": {
                                            "description": "A PNG thumbnail of the dataset, base64 encoded.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Profiling completed and returned."
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "endpoint": {
                                            "description": "The *resource* endpoint to get the resulting resource when ready.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "The *status* endpoint to poll for the status of the request.",
                                            "type": "string"
                                        },
                                        "ticket": {
                                            "description": "The ticket corresponding to the request.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Accepted for processing, but profile has not been completed.",
                        "links": {
                            "GetStatus": {
                                "description": "The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.",
                                "operationId": "getStatus",
                                "parameters": {
                                    "ticket": "$response.body#/ticket"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client error."
                    }
                },
                "summary": "Profile a vector file that is provided with the request",
                "tags": [
                    "Profile"
                ]
            }
        },
        "/resource/{ticket}": {
            "get": {
                "description": "Returns the resource resulted from a profile request corresponding to a specific ticket.",
                "parameters": [
                    {
                        "description": "The ticket of the request",
                        "in": "path",
                        "name": "ticket",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/x-tar": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "The profiled compressed spatial file."
                    },
                    "404": {
                        "description": "Ticket not found or profile has not been completed."
                    },
                    "507": {
                        "description": "Resource does not exist."
                    }
                },
                "summary": "Get the resource associated to a profile request.",
                "tags": [
                    "Resource"
                ]
            }
        },
        "/status/{ticket}": {
            "get": {
                "description": "Returns the status of a request corresponding to a specific ticket.",
                "operationId": "getStatus",
                "parameters": [
                    {
                        "description": "The ticket of the request",
                        "in": "path",
                        "name": "ticket",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "comment": {
                                            "description": "If profiling has failed, a short comment describing the reason.",
                                            "type": "string"
                                        },
                                        "completed": {
                                            "description": "Whether profiling process has been completed or not.",
                                            "type": "boolean"
                                        },
                                        "execution_time(s)": {
                                            "description": "The execution time in seconds.",
                                            "type": "integer"
                                        },
                                        "requested": {
                                            "description": "The timestamp of the request.",
                                            "format": "datetime",
                                            "type": "string"
                                        },
                                        "success": {
                                            "description": "Whether profiling process completed successfully.",
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Ticket found and status returned."
                    },
                    "404": {
                        "description": "Ticket not found."
                    }
                },
                "summary": "Get the status of a profile request.",
                "tags": [
                    "Status"
                ]
            }
        },
        "/summarize/file": {
            "post": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "clustering_column_name": {
                                        "description": "The column name to base the clustering (applies only to the clustering method)",
                                        "type": "list"
                                    },
                                    "columns_to_hist": {
                                        "description": "The columns to take their histograms",
                                        "type": "list"
                                    },
                                    "columns_to_sample": {
                                        "description": "The names of the columns to sample",
                                        "type": "list"
                                    },
                                    "crs": {
                                        "description": "The dataset's crs",
                                        "type": "string"
                                    },
                                    "csv_delimiter": {
                                        "default": "The program will try to detect it automatically",
                                        "description": "The csv file's delimiter if applicable",
                                        "type": "string"
                                    },
                                    "geometry_sampling_bounding_box": {
                                        "description": "The bounding box to get samples within it in the format [xmin, ymin, xmax, ymax]",
                                        "type": "list"
                                    },
                                    "geometry_simplification_tolerance": {
                                        "description": "The tolerance for the geometric simplification",
                                        "type": "float"
                                    },
                                    "n_buckets": {
                                        "description": "The number of buckets per histogram",
                                        "type": "list"
                                    },
                                    "n_clusters": {
                                        "description": "The number of clusters (applies only to the clustering method)",
                                        "type": "integer"
                                    },
                                    "n_sample_per_cluster": {
                                        "description": "The amount of samples per cluster (applies only to the clustering method)",
                                        "type": "integer"
                                    },
                                    "n_samples": {
                                        "description": "The amount of samples",
                                        "type": "integer"
                                    },
                                    "resource": {
                                        "description": "The spatial file.",
                                        "format": "binary",
                                        "type": "string"
                                    },
                                    "resource_type": {
                                        "description": "The file type of the resource",
                                        "enum": [
                                            "csv",
                                            "shp"
                                        ],
                                        "type": "string"
                                    },
                                    "response": {
                                        "default": "prompt",
                                        "description": "Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.",
                                        "enum": [
                                            "prompt",
                                            "deferred"
                                        ],
                                        "type": "string"
                                    },
                                    "sampling_method": {
                                        "description": "The sampling method to apply for the tabular data",
                                        "enum": [
                                            "random",
                                            "stratified",
                                            "cluster"
                                        ],
                                        "type": "string"
                                    },
                                    "to_stratify": {
                                        "description": "The columns that need to produce stratified samples",
                                        "type": "list"
                                    }
                                },
                                "required": [
                                    "resource",
                                    "resource_type"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "oneOf": [
                                {
                                    "application/json": {
                                        "schema": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        },
                        "description": "The generated summaries."
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "endpoint": {
                                            "description": "The *resource* endpoint to get the resulting resource when ready.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "The *status* endpoint to poll for the status of the request.",
                                            "type": "string"
                                        },
                                        "ticket": {
                                            "description": "The ticket corresponding to the request.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Accepted for processing, but summarization has not been completed.",
                        "links": {
                            "GetStatus": {
                                "description": "The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.",
                                "operationId": "getStatus",
                                "parameters": {
                                    "ticket": "$response.body#/ticket"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client error."
                    }
                },
                "summary": "Summarize a vector or tabular file that its provided with the request",
                "tags": [
                    "Summarize"
                ]
            }
        },
        "/summarize/path": {
            "post": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "clustering_column_name": {
                                        "description": "The column name to base the clustering (applies only to the clustering method)",
                                        "type": "list"
                                    },
                                    "columns_to_hist": {
                                        "description": "The columns to take their histograms",
                                        "type": "list"
                                    },
                                    "columns_to_sample": {
                                        "description": "The names of the columns to sample",
                                        "type": "list"
                                    },
                                    "crs": {
                                        "description": "The dataset's crs",
                                        "type": "string"
                                    },
                                    "csv_delimiter": {
                                        "default": "The program will try to detect it automatically",
                                        "description": "The csv file's delimiter if applicable",
                                        "type": "string"
                                    },
                                    "geometry_sampling_bounding_box": {
                                        "description": "The bounding box to get samples within it in the format [xmin, ymin, xmax, ymax]",
                                        "type": "list"
                                    },
                                    "geometry_simplification_tolerance": {
                                        "description": "The tolerance for the geometric simplification",
                                        "type": "float"
                                    },
                                    "n_buckets": {
                                        "description": "The number of buckets per histogram",
                                        "type": "list"
                                    },
                                    "n_clusters": {
                                        "description": "The number of clusters (applies only to the clustering method)",
                                        "type": "integer"
                                    },
                                    "n_sample_per_cluster": {
                                        "description": "The amount of samples per cluster (applies only to the clustering method)",
                                        "type": "integer"
                                    },
                                    "n_samples": {
                                        "description": "The amount of samples",
                                        "type": "integer"
                                    },
                                    "resource": {
                                        "description": "The spatial file's path.",
                                        "type": "string"
                                    },
                                    "resource_type": {
                                        "description": "The file type of the resource",
                                        "enum": [
                                            "csv",
                                            "shp"
                                        ],
                                        "type": "string"
                                    },
                                    "response": {
                                        "default": "prompt",
                                        "description": "Determines whether the profile process should be promptly initiated (*prompt*) or queued (*deferred*). In the first case, the response waits for the result, in the second the response is immediate returning a ticket corresponding to the request.",
                                        "enum": [
                                            "prompt",
                                            "deferred"
                                        ],
                                        "type": "string"
                                    },
                                    "sampling_method": {
                                        "description": "The sampling method to apply for the tabular data",
                                        "enum": [
                                            "random",
                                            "stratified",
                                            "cluster"
                                        ],
                                        "type": "string"
                                    },
                                    "to_stratify": {
                                        "description": "The columns that need to produce stratified samples",
                                        "type": "list"
                                    }
                                },
                                "required": [
                                    "resource",
                                    "resource_type"
                                ],
                                "type": "object"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "oneOf": [
                                {
                                    "application/json": {
                                        "schema": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        },
                        "description": "The generated summaries."
                    },
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "endpoint": {
                                            "description": "The *resource* endpoint to get the resulting resource when ready.",
                                            "type": "string"
                                        },
                                        "status": {
                                            "description": "The *status* endpoint to poll for the status of the request.",
                                            "type": "string"
                                        },
                                        "ticket": {
                                            "description": "The ticket corresponding to the request.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "description": "Accepted for processing, but summarization has not been completed.",
                        "links": {
                            "GetStatus": {
                                "description": "The `ticket` value returned in the response can be used as the `ticket` parameter in `GET /status/{ticket}`.",
                                "operationId": "getStatus",
                                "parameters": {
                                    "ticket": "$response.body#/ticket"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client error."
                    }
                },
                "summary": "Summarize a vector file that its path is provided with the request",
                "tags": [
                    "Summarize"
                ]
            }
        }
    }
}